{"version":3,"file":"bundle.js","sources":["../src/index.js","../src/ui/DisplayBMI.js","../node_modules/majinbuu/cjs/main.js","../node_modules/hyperhtml/cjs/classes/Component.js","../node_modules/hyperhtml/cjs/shared/easy-dom.js","../node_modules/hyperhtml/cjs/shared/constants.js","../node_modules/hyperhtml/cjs/shared/poorlyfills.js","../node_modules/hyperhtml/cjs/classes/Aura.js","../node_modules/hyperhtml/cjs/objects/Transformer.js","../node_modules/hyperhtml/cjs/shared/features-detection.js","../node_modules/hyperhtml/cjs/shared/utils.js","../node_modules/hyperhtml/cjs/objects/Path.js","../node_modules/hyperhtml/cjs/objects/Style.js","../node_modules/hyperhtml/cjs/objects/Updates.js","../node_modules/hyperhtml/cjs/hyper/render.js","../node_modules/hyperhtml/cjs/hyper/wire.js","../node_modules/hyperhtml/cjs/main.js","../src/ui/Heartbeat.js"],"sourcesContent":["import { bind, wire } from 'hyperhtml';\r\nimport './styles/index.css';\r\n\r\nimport Heartbeat from './ui/Heartbeat';\r\nimport DisplayBMI from './ui/DisplayBMI';\r\nimport Debug from './ui/Debug';\r\n\r\nconst render = bind(document.body);\r\n\r\nconst store = {\r\n  gender: 'male',\r\n  age: 22,\r\n  height: 180,\r\n  weight: 60,\r\n  bmi: null,\r\n  setStore(key, value) {\r\n    this[key] = value;\r\n    App(render, this);\r\n  },\r\n};\r\n\r\nconst num = number => Number.parseFloat(number);\r\n\r\nfunction App(html, store) {\r\n  const render = store.bmi ? DisplayBMI(store) : Heartbeat(store);\r\n\r\n  function handleEvent({ target }) {\r\n    store.setStore(target.name, target.value);\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const { height, weight } = store;\r\n\r\n    const bmi = num(weight) / Math.pow(num(height), 2);\r\n\r\n    store.setStore('bmi', bmi);\r\n  }\r\n\r\n  html`\r\n    <header class=\"header\">\r\n      <h3 class=\"header__title\">Calculateur d'IMC</h3>\r\n    </header>\r\n\r\n    <main class=\"main\">\r\n      ${render}\r\n\r\n      <form class=\"form\" onsubmit=${handleSubmit}>\r\n        <section class=\"gender\">\r\n          <div class=\"gender__input\">\r\n            <input onchange=${handleEvent} type=\"radio\" id=\"homme\" name=\"gender\" value=\"homme\" checked />\r\n            <label for=\"homme\">Homme</label>\r\n          </div>\r\n\r\n          <div class=\"gender__input\">\r\n            <input onchange=${handleEvent} type=\"radio\" id=\"femme\" name=\"gender\" value=\"femme\" />\r\n            <label for=\"femme\">Femme</label>\r\n          </div>\r\n        </section>\r\n\r\n        <section class=\"inputs\">\r\n          <div class=\"input\">\r\n            <label class=\"input__label\" for=\"age\">age</label>\r\n            <input class=\"input__field\" name=\"age\" oninput=${handleEvent} type=\"text\" id=\"age\"/>\r\n          </div>\r\n          <div class=\"input\">\r\n            <label class=\"input__label\" for=\"taille\">taille</label>\r\n            <input class=\"input__field\" name=\"height\" oninput=${handleEvent} type=\"text\" id=\"taille\" name=\"taille\"/>\r\n            <span class=\"input__metric\">Cm</span>\r\n          </div>\r\n          <div class=\"input\">\r\n            <label class=\"input__label\" for=\"poids\">poids</label>\r\n            <input class=\"input__field\" name=\"weight\" oninput=${handleEvent} type=\"text\" id=\"poids\" name=\"poids\"/>\r\n            <span class=\"input__metric\">Kg</span>\r\n          </div>\r\n        </section>\r\n\r\n        <button type=\"submit\" class=\"form__submit\">Calculer</button>\r\n      </form>\r\n    </main>\r\n  `;\r\n}\r\n\r\nfunction handleClick(e) {\r\n  store.name = 'Paux';\r\n  App(render, store);\r\n}\r\n\r\nApp(render, store);\r\n","import { wire } from 'hyperhtml';\r\n\r\nexport default function DisplayBMI(store) {\r\n  const html = wire(store, ':bmi');\r\n  const bmi = store.bmi.toFixed(2);\r\n\r\n  const displayBMI = html`\r\n        <div class=\"score\" data-anime=\"score\">\r\n            <h2 class=\"score__msg\">Bonne forme !</h2>\r\n            <h2 class=\"score__bmi\">IMC : <strong>${bmi}</strong></h2>\r\n        </div>\r\n    `;\r\n\r\n  return displayBMI;\r\n}\r\n","'use strict';\n/*! Copyright (c) 2017, Andrea Giammarchi, @WebReflection */\n\n// grid operations\nconst DELETE = 'del';\nconst INSERT = 'ins';\nconst SUBSTITUTE = 'sub';\n\n// typed Array\nconst TypedArray = global.Int32Array || Array;\n\nconst majinbuu = (from, to, MAX_SIZE) => {\n\n  const fromLength = from.length;\n  const toLength = to.length;\n  const TOO_MANY = (MAX_SIZE || Infinity) < Math.sqrt((fromLength || 1) * (toLength || 1));\n\n  if (fromLength < 1 || TOO_MANY) {\n    if (toLength || TOO_MANY) {\n      from.splice.apply(from, [0, fromLength].concat(to));\n    }\n    return;\n  }\n  if (toLength < 1) {\n    from.splice(0);\n    return;\n  }\n  performOperations(\n    from,\n    getOperations(from, to, levenstein(from, to))\n  );\n}; \n\n// given an object that would like to intercept\n// all splice operations performed through a list,\n// wraps the list.splice method to delegate such object\n// and it puts back original splice right before every invocation.\n// Note: do not use the same list in two different aura\nconst aura = (splicer, list) => {\n  const splice = list.splice;\n  function $splice() {\n    list.splice = splice;\n    const result = splicer.splice.apply(splicer, arguments);\n    list.splice = $splice;\n    return result;\n  }\n  list.splice = $splice;\n  return list;\n};\n\n// Helpers - - - - - - - - - - - - - - - - - - - - - -\n\n// originally readapted from:\n// http://webreflection.blogspot.co.uk/2009/02/levenshtein-algorithm-revisited-25.html\n// then rewritten in C for Emscripten (see levenstein.c)\n// then \"screw you ASM\" due no much gain but very bloated code\nconst levenstein = (from, to) => {\n  const fromLength = from.length + 1;\n  const toLength = to.length + 1;\n  const size = fromLength * toLength;\n  const grid = new TypedArray(size);\n  let x = 0;\n  let y = 0;\n  let X = 0;\n  let Y = 0;\n  let crow = 0;\n  let prow = 0;\n  let del, ins, sub;\n  grid[0] = 0;\n  while (++x < toLength) grid[x] = x;\n  while (++y < fromLength) {\n    X = x = 0;\n    prow = crow;\n    crow = y * toLength;\n    grid[crow + x] = y;\n    while (++x < toLength) {\n      del = grid[prow + x] + 1;\n      ins = grid[crow + X] + 1;\n      sub = grid[prow + X] + (from[Y] == to[X] ? 0 : 1);\n      grid[crow + x] = del < ins ?\n                        (del < sub ?\n                          del : sub) :\n                        (ins < sub ?\n                          ins : sub);\n      ++X;\n    };\n    Y = y;\n  }\n  return grid;\n};\n\n// add operations (in reversed order)\nconst addOperation = (list, type, x, y, count, items) => {\n  list.unshift({type, x, y, count, items});\n};\n\n// walk the Levenshtein grid bottom -> up\nconst getOperations = (Y, X, grid) => {\n  const list = [];\n  const YL = Y.length + 1;\n  const XL = X.length + 1;\n  let y = YL - 1;\n  let x = XL - 1;\n  let cell,\n      top, left, diagonal,\n      crow, prow;\n  while (x && y) {\n    crow = y * XL + x;\n    prow = crow - XL;\n    cell = grid[crow];\n    top = grid[prow];\n    left = grid[crow - 1];\n    diagonal = grid[prow - 1];\n    if (diagonal <= left && diagonal <= top && diagonal <= cell) {\n      x--;\n      y--;\n      if (diagonal < cell) {\n        addOperation(list, SUBSTITUTE, x, y, 1, [X[x]]);\n      }\n    }\n    else if (left <= top && left <= cell) {\n      x--;\n      addOperation(list, INSERT, x, y, 0, [X[x]]);\n    }\n    else {\n      y--;\n      addOperation(list, DELETE, x, y, 1, []);\n    }\n  }\n  while (x--) {\n    addOperation(list, INSERT, x, y, 0, [X[x]]);\n  }\n  while (y--) {\n    addOperation(list, DELETE, x, y, 1, []);\n  }\n  return list;\n};\n\n/* grouped operations */\nconst performOperations = (target, operations) => {\n  const length = operations.length;\n  let diff = 0;\n  let i = 1;\n  let curr, prev, op;\n  if (length) {\n    op = (prev = operations[0]);\n    while (i < length) {\n      curr = operations[i++];\n      if (prev.type === curr.type && (curr.x - prev.x) <= 1 && (curr.y - prev.y) <= 1) {\n        op.count += curr.count;\n        op.items = op.items.concat(curr.items);\n      } else {\n        target.splice.apply(target, [op.y + diff, op.count].concat(op.items));\n        diff += op.type === INSERT ?\n          op.items.length : (op.type === DELETE ?\n            -op.count : 0);\n        op = curr;\n      }\n      prev = curr;\n    }\n    target.splice.apply(target, [op.y + diff, op.count].concat(op.items));\n  }\n};\n\nmajinbuu.aura = aura;\n\nObject.defineProperty(exports, '__esModule', {value: true}).default = majinbuu;\nexports.aura = aura;\nexports.majinbuu = majinbuu;\n","'use strict';\n// hyperHTML.Component is a very basic class\n// able to create Custom Elements like components\n// including the ability to listen to connect/disconnect\n// events via onconnect/ondisconnect attributes\nfunction Component() {}\nObject.defineProperty(exports, '__esModule', {value: true}).default = Component\n\n// components will lazily define html or svg properties\n// as soon as these are invoked within the .render() method\n// Such render() method is not provided by the base class\n// but it must be available through the Component extend.\nfunction setup(content) {\n  Object.defineProperties(\n    Component.prototype,\n    {\n      handleEvent: {value(e) {\n        const ct = e.currentTarget;\n        this[\n          ('getAttribute' in ct && ct.getAttribute('data-call')) ||\n          ('on' + e.type)\n        ](e);\n      }},\n      html: lazyGetter('html', content),\n      svg: lazyGetter('svg', content),\n      state: lazyGetter('state', function () { return this.defaultState; }),\n      defaultState: {get() { return {}; }},\n      setState: {value(state) {\n        const target = this.state;\n        const source = typeof state === 'function' ? state.call(this, target) : state;\n        for (const key in source) target[key] = source[key];\n        this.render();\n      }}\n    }\n  );\n}\nexports.setup = setup\n\n// instead of a secret key I could've used a WeakMap\n// However, attaching a property directly will result\n// into better performance with thousands of components\n// hanging around, and less memory pressure caused by the WeakMap\nconst lazyGetter = (type, fn) => {\n  const secret = '_' + type + '$';\n  return {\n    get() {\n      return this[secret] || (this[type] = fn.call(this, type));\n    },\n    set(value) {\n      Object.defineProperty(this, secret, {configurable: true, value});\n    }\n  };\n};\n","'use strict';\n// these are tiny helpers to simplify most common operations needed here\nconst create = (node, type) => doc(node).createElement(type);\nexports.create = create;\nconst doc = node => node.ownerDocument || node;\nexports.doc = doc;\nconst fragment = node => doc(node).createDocumentFragment();\nexports.fragment = fragment;\nconst text = (node, text) => doc(node).createTextNode(text);\nexports.text = text;\n","'use strict';\n// Node.CONSTANTS (not every engine has a global Node defined)\nconst ELEMENT_NODE = 1;\nexports.ELEMENT_NODE = ELEMENT_NODE;\nconst ATTRIBUTE_NODE = 2;\nexports.ATTRIBUTE_NODE = ATTRIBUTE_NODE;\nconst TEXT_NODE = 3;\nexports.TEXT_NODE = TEXT_NODE;\nconst COMMENT_NODE = 8;\nexports.COMMENT_NODE = COMMENT_NODE;\nconst DOCUMENT_FRAGMENT_NODE = 11;\nexports.DOCUMENT_FRAGMENT_NODE = DOCUMENT_FRAGMENT_NODE;\n\n// SVG related constants\nconst OWNER_SVG_ELEMENT = 'ownerSVGElement';\nexports.OWNER_SVG_ELEMENT = OWNER_SVG_ELEMENT;\nconst SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\nexports.SVG_NAMESPACE = SVG_NAMESPACE;\n\n// Custom Elements / MutationObserver constants\nconst CONNECTED = 'connected';\nexports.CONNECTED = CONNECTED;\nconst DISCONNECTED = 'dis' + CONNECTED;\nexports.DISCONNECTED = DISCONNECTED;\n\n// hyperHTML related constants\nconst EXPANDO = '_hyper: ';\nexports.EXPANDO = EXPANDO;\nconst SHOULD_USE_TEXT_CONTENT = /^style|textarea$/i;\nexports.SHOULD_USE_TEXT_CONTENT = SHOULD_USE_TEXT_CONTENT;\nconst UID = EXPANDO + ((Math.random() * new Date) | 0) + ';';\nexports.UID = UID;\nconst UIDC = '<!--' + UID + '-->';\nexports.UIDC = UIDC;\n","'use strict';\nconst {UID} = require('./constants.js');\n\n// you know that kind of basics you need to cover\n// your use case only but you don't want to bloat the library?\n// There's even a package in here:\n// https://www.npmjs.com/package/poorlyfills\n\n// used to dispatch simple events\nlet Event = global.Event;\ntry {\n  new Event('Event');\n} catch(o_O) {\n  Event = function (type) {\n    const e = document.createEvent('Event');\n    e.initEvent(type, false, false);\n    return e;\n  };\n}\nexports.Event = Event;\n\n// used to store template literals\nconst Map = global.Map || function Map() {\n  const keys = [], values = [];\n  return {\n    get(obj) {\n      return values[keys.indexOf(obj)];\n    },\n    set(obj, value) {\n      values[keys.push(obj) - 1] = value;\n    }\n  };\n};\nexports.Map = Map;\n\n// used to store wired content\nconst WeakMap = global.WeakMap || function WeakMap() {\n  return {\n    get(obj) { return obj[UID]; },\n    set(obj, value) {\n      Object.defineProperty(obj, UID, {\n        configurable: true,\n        value\n      });\n    }\n  };\n};\nexports.WeakMap = WeakMap;\n\n// used to store hyper.Components\nconst WeakSet = global.WeakSet || function WeakSet() {\n  const wm = new WeakMap;\n  return {\n    add(obj) { wm.set(obj, true); },\n    has(obj) { return wm.get(obj) === true; }\n  };\n};\nexports.WeakSet = WeakSet;\n\n// used to be sure IE9 or older Androids work as expected\nconst isArray = Array.isArray || (toString =>\n  arr => toString.call(arr) === '[object Array]'\n)({}.toString);\nexports.isArray = isArray;\n\nconst trim = UID.trim || function () {\n  return this.replace(/^\\s+|\\s+$/g, '');\n};\nexports.trim = trim;\n","'use strict';\nconst majinbuu = (m => m.__esModule ? m.default : m)(require('majinbuu'));\nconst Component = (m => m.__esModule ? m.default : m)(require('./Component.js'));\nconst {fragment} = require('../shared/easy-dom.js');\nconst {Map} = require('../shared/poorlyfills.js');\n\n// this class has one purpose:\n// provide a splice method shared\n// between all instances\nfunction Aura(node, childNodes) {\n  this.node = node;\n  this.childNodes = childNodes;\n  return majinbuu.aura(this, childNodes);\n}\n\n// majinbuu is fast but exponentially inefficient\n// if you are handling thousands of items (which you shouldn't)\n// calculating their diff might be too expensive.\n// Let's use raw DOM when list of items is 1K+\nAura.MAX_LIST_SIZE = 999;\n\n// the splice is in charge of removing or adding nodes\nAura.prototype.splice = function splice(start, end) {\n  const values = new Map;\n  const ph = this.node;\n  const cn = this.childNodes;\n  const target = get(values, cn[start + (end || 0)] || ph);\n  const result = cn.splice.apply(cn, arguments);\n  const pn = ph.parentNode;\n  const reLength = result.length;\n  for (let i = 0; i < reLength; i++) {\n    const tmp = result[i];\n    if (cn.indexOf(tmp) < 0) {\n      pn.removeChild(get(values, tmp));\n    }\n  }\n  const arLength = arguments.length;\n  if (3 === arLength) {\n    pn.insertBefore(get(values, arguments[2]), target);\n  } else if (2 < arLength) {\n    const tmp = fragment(pn);\n    for (let i = 2; i < arLength; i++) {\n      tmp.appendChild(get(values, arguments[i]));\n    }\n    pn.insertBefore(tmp, target);\n  }\n  return result;\n};\n\n// an item could be an hyperHTML.Component and, in such case,\n// it should be rendered as node\nconst asNode = node => node instanceof Component ? node.render() : node;\n\n// instead of checking instanceof each time and render potentially twice\n// use a map to retrieve nodes from a generic item\nconst get = (map, node) => map.get(node) || set(map, node);\nconst set = (map, node) => {\n  const value = asNode(node);\n  map.set(node, value);\n  return value;\n};\n\nObject.defineProperty(exports, '__esModule', {value: true}).default = Aura;\n","'use strict';\nconst transformers = {};\nconst transformersKeys = [];\nconst hasOwnProperty = transformers.hasOwnProperty;\n\nlet length = 0;\n\n// hyperHTML.define('intent', (object, update) => {...})\n// can be used to define a third parts update mechanism\n// when every other known mechanism failed.\n// hyper.define('user', info => info.name);\n// hyper(node)`<p>${{user}}</p>`;\nObject.defineProperty(exports, '__esModule', {value: true}).default = {\n  define: (transformer, callback) => {\n    if (!(transformer in transformers)) {\n      length = transformersKeys.push(transformer);\n    }\n    transformers[transformer] = callback;\n  },\n  invoke: (object, callback) => {\n    for (let i = 0; i < length; i++) {\n      let key = transformersKeys[i];\n      if (hasOwnProperty.call(object, key)) {\n        return transformers[key](object[key], callback);\n      }\n    }\n  }\n};\n","'use strict';\nconst {create, fragment, text} = require('./easy-dom.js');\n\nconst testFragment = fragment(document);\n\n// DOM4 node.append(...many)\nconst hasAppend = 'append' in testFragment;\nexports.hasAppend = hasAppend;\n\n// detect old browsers without HTMLTemplateElement content support\nconst hasContent = 'content' in create(document, 'template');\nexports.hasContent = hasContent;\n\n// IE 11 has problems with cloning templates: it \"forgets\" empty childNodes\ntestFragment.appendChild(text(testFragment, 'g'));\ntestFragment.appendChild(text(testFragment, ''));\nconst hasDoomedCloneNode = testFragment.cloneNode(true).childNodes.length === 1;\nexports.hasDoomedCloneNode = hasDoomedCloneNode;\n\n// old browsers need to fallback to cloneNode\n// Custom Elements V0 and V1 will work polyfilled\n// but native implementations need importNode instead\n// (specially Chromium and its old V0 implementation)\nconst hasImportNode = 'importNode' in document;\nexports.hasImportNode = hasImportNode;\n","'use strict';\nconst {\n  OWNER_SVG_ELEMENT,\n  SVG_NAMESPACE,\n  UID,\n  UIDC\n} = require('./constants.js');\n\nconst {\n  hasAppend,\n  hasContent,\n  hasDoomedCloneNode,\n  hasImportNode\n} = require('./features-detection.js');\n\nconst {create, doc, fragment} = require('./easy-dom.js');\n\n// appends an array of nodes\n// to a generic node/fragment\n// When available, uses append passing all arguments at once\n// hoping that's somehow faster, even if append has more checks on type\nconst append = hasAppend ?\n  (node, childNodes) => {\n    node.append.apply(node, childNodes);\n  } :\n  (node, childNodes) => {\n    const length = childNodes.length;\n    for (let i = 0; i < length; i++) {\n      node.appendChild(childNodes[i]);\n    }\n  };\nexports.append = append;\n\n// remove comments parts from attributes to avoid issues\n// with either old browsers or SVG elements\n// export const cleanAttributes = html => html.replace(no, comments);\nconst attrName = '[^\\\\S]+[^ \\\\f\\\\n\\\\r\\\\t\\\\/>\"\\'=]+';\nconst no = new RegExp(\n  '(<[a-z]+[a-z0-9:_-]*)((?:' +\n    attrName +\n  '(?:=(?:\\'.*?\\'|\".*?\"|<.+?>|\\\\S+))?)+)([^\\\\S]*/?>)',\n  'gi'\n);\nconst findAttributes = new RegExp('(' + attrName + '=)([\\'\"]?)' + UIDC + '\\\\2', 'gi');\nconst comments = ($0, $1, $2, $3) =>\n  $1 + $2.replace(findAttributes, replaceAttributes) + $3;\nconst replaceAttributes = ($0, $1, $2) => $1 + ($2 || '\"') + UID + ($2 || '\"');\n\n// given a node and a generic HTML content,\n// create either an SVG or an HTML fragment\n// where such content will be injected\nconst createFragment = (node, html) =>\n  (OWNER_SVG_ELEMENT in node ?\n    SVGFragment :\n    HTMLFragment\n  )(node, html.replace(no, comments));\nexports.createFragment = createFragment;\n\n// IE/Edge shenanigans proof cloneNode\n// it goes through all nodes manually\n// instead of relying the engine to suddenly\n// merge nodes together\nconst cloneNode = hasDoomedCloneNode ?\n  node => {\n    const clone = node.cloneNode();\n    const childNodes = node.childNodes ||\n                      // this is an excess of caution\n                      // but some node, in IE, might not\n                      // have childNodes property.\n                      // The following fallback ensure working code\n                      // in older IE without compromising performance\n                      // or any other browser/engine involved.\n                      /* istanbul ignore next */\n                      [];\n    const length = childNodes.length;\n    for (let i = 0; i < length; i++) {\n      clone.appendChild(cloneNode(childNodes[i]));\n    }\n    return clone;\n  } :\n  // the following ignore is due code-coverage\n  // combination of not having document.importNode\n  // but having a working node.cloneNode.\n  // This shenario is common on older Android/WebKit browsers\n  // but basicHTML here tests just two major cases:\n  // with document.importNode or with broken cloneNode.\n  /* istanbul ignore next */\n  node => node.cloneNode(true);\n\n// used to import html into fragments\nconst importNode = hasImportNode ?\n  (doc, node) => doc.importNode(node, true) :\n  (doc, node) => cloneNode(node)\nexports.importNode = importNode\n\n// just recycling a one-off array to use slice\n// in every needed place\nconst slice = [].slice;\nexports.slice = slice;\n\n// lazy evaluated, returns the unique identity\n// of a template literal, as tempalte literal itself.\n// By default, ES2015 template literals are unique\n// tag`a${1}z` === tag`a${2}z`\n// even if interpolated values are different\n// the template chunks are in a frozen Array\n// that is identical each time you use the same\n// literal to represent same static content\n// around its own interpolations.\nconst unique = template => TL(template);\nexports.unique = unique;\n\n// TL returns a unique version of the template\n// it needs lazy feature detection\n// (cannot trust literals with transpiled code)\nlet TL = template => {\n  if (\n    // TypeScript template literals are not standard\n    template.propertyIsEnumerable('raw') ||\n    (\n      // Firefox < 55 has not standard implementation neither\n      /Firefox\\/(\\d+)/.test((global.navigator || {}).userAgent) &&\n      parseFloat(RegExp.$1) < 55\n    )\n  ) {\n    // in these cases, address templates once\n    const templateObjects = {};\n    // but always return the same template\n    TL = template => {\n      const key = '_' + template.join(UID);\n      return templateObjects[key] || (\n        templateObjects[key] = template\n      );\n    };\n  }\n  else {\n    // make TL an identity like function\n    TL = template => template;\n  }\n  return TL(template);\n};\n\n// create document fragments via native template\n// with a fallback for browsers that won't be able\n// to deal with some injected element such <td> or others\nconst HTMLFragment = hasContent ?\n  (node, html) => {\n    const container = create(node, 'template');\n    container.innerHTML = html;\n    return container.content;\n  } :\n  (node, html) => {\n    const container = create(node, 'template');\n    const content = fragment(node);\n    if (/^[^\\S]*?<(col(?:group)?|t(?:head|body|foot|r|d|h))/i.test(html)) {\n      const selector = RegExp.$1;\n      container.innerHTML = '<table>' + html + '</table>';\n      append(content, slice.call(container.querySelectorAll(selector)));\n    } else {\n      container.innerHTML = html;\n      append(content, slice.call(container.childNodes));\n    }\n    return content;\n  };\n\n// creates SVG fragment with a fallback for IE that needs SVG\n// within the HTML content\nconst SVGFragment = hasContent ?\n  (node, html) => {\n    const content = fragment(node);\n    const container = doc(node).createElementNS(SVG_NAMESPACE, 'svg');\n    container.innerHTML = html;\n    append(content, slice.call(container.childNodes));\n    return content;\n  } :\n  (node, html) => {\n    const content = fragment(node);\n    const container = create(node, 'div');\n    container.innerHTML = '<svg xmlns=\"' + SVG_NAMESPACE + '\">' + html + '</svg>';\n    append(content, slice.call(container.firstChild.childNodes));\n    return content;\n  };\n","'use strict';\nconst {\n  COMMENT_NODE,\n  DOCUMENT_FRAGMENT_NODE,\n  ELEMENT_NODE\n} = require('../shared/constants.js');\n\n// every template literal interpolation indicates\n// a precise target in the DOM the template is representing.\n// `<p id=${'attribute'}>some ${'content'}</p>`\n// hyperHTML finds only once per template literal,\n// hence once per entire application life-cycle,\n// all nodes that are related to interpolations.\n// These nodes are stored as indexes used to retrieve,\n// once per upgrade, nodes that will change on each future update.\n// A path example is [2, 0, 1] representing the operation:\n// node.childNodes[2].childNodes[0].childNodes[1]\n// Attributes are addressed via their owner node and their name.\nconst createPath = node => {\n  const path = [];\n  let parentNode;\n  switch (node.nodeType) {\n    case ELEMENT_NODE:\n    case DOCUMENT_FRAGMENT_NODE:\n      parentNode = node;\n      break;\n    case COMMENT_NODE:\n      parentNode = node.parentNode;\n      prepend(path, parentNode, node);\n      break;\n    default:\n      parentNode = node.ownerElement;\n      break;\n  }\n  for (\n    node = parentNode;\n    (parentNode = parentNode.parentNode);\n    node = parentNode\n  ) {\n    prepend(path, parentNode, node);\n  }\n  return path;\n};\n\nconst prepend = (path, parent, node) => {\n  path.unshift(path.indexOf.call(parent.childNodes, node));\n};\n\nObject.defineProperty(exports, '__esModule', {value: true}).default = {\n  create: (type, node, name) => ({type, name, node, path: createPath(node)}),\n  find: (node, path) => {\n    const length = path.length;\n    for (let i = 0; i < length; i++) {\n      node = node.childNodes[path[i]];\n    }\n    return node;\n  }\n}\n","'use strict';\n// from https://github.com/developit/preact/blob/33fc697ac11762a1cb6e71e9847670d047af7ce5/src/constants.js\nconst IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|ows|mnc|ntw|ine[ch]|zoo|^ord/i;\n\n// style is handled as both string and object\n// even if the target is an SVG element (consistency)\nObject.defineProperty(exports, '__esModule', {value: true}).default = (node, original, isSVG) => {\n  if (isSVG) {\n    const style = original.cloneNode(true);\n    style.value = '';\n    node.setAttributeNode(style);\n    return update(style, isSVG);\n  }\n  return update(node.style, isSVG);\n};\n\n// the update takes care or changing/replacing\n// only properties that are different or\n// in case of string, the whole node\nconst update = (style, isSVG) => {\n  let oldType, oldValue;\n  return newValue => {\n    switch (typeof newValue) {\n      case 'object':\n        if (newValue) {\n          if (oldType === 'object') {\n            if (!isSVG) {\n              if (oldValue !== newValue) {\n                for (const key in oldValue) {\n                  if (!(key in newValue)) {\n                    style[key] = '';\n                  }\n                }\n              }\n            }\n          } else {\n            if (isSVG) style.value = '';\n            else style.cssText = '';\n          }\n          const info = isSVG ? {} : style;\n          for (const key in newValue) {\n            const value = newValue[key];\n            info[key] = typeof value === 'number' &&\n                        !IS_NON_DIMENSIONAL.test(key) ?\n                          (value + 'px') : value;\n          }\n          oldType = 'object';\n          if (isSVG) style.value = toStyle((oldValue = info));\n          else oldValue = newValue;\n          break;\n        }\n      default:\n        if (oldValue != newValue) {\n          oldType = 'string';\n          oldValue = newValue;\n          if (isSVG) style.value = newValue || '';\n          else style.cssText = newValue || '';\n        }\n        break;\n    }\n  };\n};\n\nconst hyphen = /([^A-Z])([A-Z]+)/g;\nconst ized = ($0, $1, $2) => $1 + '-' + $2.toLowerCase();\nconst toStyle = object => {\n  const css = [];\n  for (const key in object) {\n    css.push(key.replace(hyphen, ized), ':', object[key], ';');\n  }\n  return css.join('');\n};","'use strict';\nconst majinbuu = (m => m.__esModule ? m.default : m)(require('majinbuu'));\n\nconst {\n  CONNECTED, DISCONNECTED, COMMENT_NODE, DOCUMENT_FRAGMENT_NODE, ELEMENT_NODE, TEXT_NODE, OWNER_SVG_ELEMENT, SHOULD_USE_TEXT_CONTENT, UID, UIDC\n} = require('../shared/constants.js');\n\nconst Aura = (m => m.__esModule ? m.default : m)(require('../classes/Aura.js'));\nconst Component = (m => m.__esModule ? m.default : m)(require('../classes/Component.js'));\nconst Path = (m => m.__esModule ? m.default : m)(require('./Path.js'));\nconst Style = (m => m.__esModule ? m.default : m)(require('./Style.js'));\nconst Transformer = (m => m.__esModule ? m.default : m)(require('./Transformer.js'));\nconst {text} = require('../shared/easy-dom.js');\nconst {Event, WeakSet, isArray, trim} = require('../shared/poorlyfills.js');\nconst {createFragment, slice} = require('../shared/utils.js');\n\n// if you want to use Promises as interpolation value\n// be sure your browser supports them or provide a polyfill\n// before including/importing hyperHTML\nconst Promise = global.Promise;\n\n// hyper.Component have a connected/disconnected\n// mechanism provided by MutationObserver\n// This weak set is used to recognize components\n// as DOM node that needs to trigger connected/disconnected events\nconst components = new WeakSet;\n\n// a basic dictionary used to filter already cached attributes\n// while looking for special hyperHTML values.\nfunction Cache() {}\nCache.prototype = Object.create(null);\n\n// returns an intent to explicitly inject content as html\nconst asHTML = html => ({html});\n\n// updates are created once per context upgrade\n// within the main render function (../hyper/render.js)\n// These are an Array of callbacks to invoke passing\n// each interpolation value.\n// Updates can be related to any kind of content,\n// attributes, or special text-only cases such <style>\n// elements or <textarea>\nconst create = (root, paths) => {\n  const updates = [];\n  const length = paths.length;\n  for (let i = 0; i < length; i++) {\n    const info = paths[i];\n    const node = Path.find(root, info.path);\n    switch (info.type) {\n      case 'any':\n        updates.push(setAnyContent(node, []));\n        break;\n      case 'attr':\n        updates.push(setAttribute(node, info.name, info.node));\n        break;\n      case 'text':\n        updates.push(setTextContent(node));\n        break;\n    }\n  }\n  return updates;\n};\n\n// when hyper.Component related DOM nodes\n// are appended or removed from the live tree\n// these might listen to connected/disconnected events\n// This utility is in charge of finding all components\n// involved in the DOM update/change and dispatch\n// related information to them\nconst dispatchAll = (nodes, type) => {\n  const event = new Event(type);\n  const length = nodes.length;\n  for (let i = 0; i < length; i++) {\n    let node = nodes[i];\n    if (node.nodeType === ELEMENT_NODE) {\n      dispatchTarget(node, event);\n    }\n  }\n};\n\n// the way it's done is via the components weak set\n// and recursively looking for nested components too\nconst dispatchTarget = (node, event) => {\n  if (components.has(node)) {\n    node.dispatchEvent(event);\n  } else {\n    const children = node.children;\n    const length = children.length;\n    for (let i = 0; i < length; i++) {\n      dispatchTarget(children[i], event);\n    }\n  }\n}\n\n// finding all paths is a one-off operation performed\n// when a new template literal is used.\n// The goal is to map all target nodes that will be\n// used to update content/attributes every time\n// the same template literal is used to create content.\n// The result is a list of paths related to the template\n// with all the necessary info to create updates as\n// list of callbacks that target directly affected nodes.\nconst find = (node, paths, parts) => {\n  const childNodes = node.childNodes;\n  const length = childNodes.length;\n  for (let i = 0; i < length; i++) {\n    let child = childNodes[i];\n    switch (child.nodeType) {\n      case ELEMENT_NODE:\n        findAttributes(child, paths, parts);\n        find(child, paths, parts);\n        break;\n      case COMMENT_NODE:\n        if (child.textContent === UID) {\n          parts.shift();\n          paths.push(\n            // basicHTML or other non standard engines\n            // might end up having comments in nodes\n            // where they shouldn't, hence this check.\n            SHOULD_USE_TEXT_CONTENT.test(node.nodeName) ?\n              Path.create('text', node) :\n              Path.create('any', child)\n          );\n        }\n        break;\n      case TEXT_NODE:\n        // the following ignore is actually covered by browsers\n        // only basicHTML ends up on previous COMMENT_NODE case\n        // instead of TEXT_NODE because it knows nothing about\n        // special style or textarea behavior\n        /* istanbul ignore if */\n        if (\n          SHOULD_USE_TEXT_CONTENT.test(node.nodeName) &&\n          trim.call(child.textContent) === UIDC\n        ) {\n          parts.shift();\n          paths.push(Path.create('text', node));\n        }\n        break;\n    }\n  }\n};\n\n// attributes are searched via unique hyperHTML id value.\n// Despite HTML being case insensitive, hyperHTML is able\n// to recognize attributes by name in a caseSensitive way.\n// This plays well with Custom Elements definitions\n// and also with XML-like environments, without trusting\n// the resulting DOM but the template literal as the source of truth.\n// IE/Edge has a funny bug with attributes and these might be duplicated.\n// This is why there is a cache in charge of being sure no duplicated\n// attributes are ever considered in future updates.\nconst findAttributes = (node, paths, parts) => {\n  const cache = new Cache;\n  const attributes = node.attributes;\n  const array = slice.call(attributes);\n  const remove = [];\n  const length = array.length;\n  for (let i = 0; i < length; i++) {\n    const attribute = array[i];\n    if (attribute.value === UID) {\n      const name = attribute.name;\n      // the following ignore is covered by IE\n      // and the IE9 double viewBox test\n      /* istanbul ignore else */\n      if (!(name in cache)) {\n        const realName = parts.shift().replace(/^(?:|[\\S\\s]*?\\s)(\\S+?)=['\"]?$/, '$1');\n        cache[name] = attributes[realName] ||\n                      // the following ignore is covered by browsers\n                      // while basicHTML is already case-sensitive\n                      /* istanbul ignore next */\n                      attributes[realName.toLowerCase()];\n        paths.push(Path.create('attr', cache[name], realName));\n      }\n      remove.push(attribute);\n    }\n  }\n  const len = remove.length;\n  for (let i = 0; i < remove.length; i++) {\n    node.removeAttributeNode(remove[i]);\n  }\n};\n\n// when a Promise is used as interpolation value\n// its result must be parsed once resolved.\n// This callback is in charge of understanding what to do\n// with a returned value once the promise is resolved.\nconst invokeAtDistance = (value, callback) => {\n  callback(value.placeholder);\n  if ('text' in value) {\n    Promise.resolve(value.text).then(String).then(callback);\n  } else if ('any' in value) {\n    Promise.resolve(value.any).then(callback);\n  } else if ('html' in value) {\n    Promise.resolve(value.html).then(asHTML).then(callback);\n  } else {\n    Promise.resolve(Transformer.invoke(value, callback)).then(callback);\n  }\n};\n\n// quick and dirty ways to check a value type without abusing instanceof\nconst isNode_ish = value => 'ELEMENT_NODE' in value;\nconst isPromise_ish = value => value != null && 'then' in value;\n\n// special attributes are usually available through their owner class\n// 'value' in input\n// 'src' in img\n// and so on. These attributes don't act properly via get/setAttribute\n// so in these case their value is set, or retrieved, right away\n// input.value = ...\n// img.src = ...\nconst isSpecial = (node, name) => !(OWNER_SVG_ELEMENT in node) && name in node;\n\n// whenever a list of nodes/components is updated\n// there might be updates or not.\n// If the new list has different length, there's surely\n// some DOM operation to perform.\n// Otherwise operations should be performed **only**\n// if the content od the two lists is different from before.\n// Majinbuu is the project in charge of computing these differences.\n// It uses the Levenshtein distance algorithm to produce the least amount\n// of splice operations an Array needs to become like another Array.\nconst optimist = (aura, value) => {\n  let length = aura.length;\n  if (value.length !== length) {\n    // TODO: there's room for improvements for common cases\n    // where a single node has been appended or prepended\n    // and the whole Levenshtein distance computation\n    // would be overkill\n    majinbuu(aura, value, Aura.MAX_LIST_SIZE);\n  } else {\n    for (let i = 0; i < length--; i++) {\n      if (aura[length] !== value[length] || aura[i] !== value[i]) {\n        majinbuu(aura, value, Aura.MAX_LIST_SIZE);\n        return;\n      }\n    }\n  }\n};\n\n// in a hyper(node)`<div>${content}</div>` case\n// everything could happen:\n//  * it's a JS primitive, stored as text\n//  * it's null or undefined, the node should be cleaned\n//  * it's a component, update the content by rendering it\n//  * it's a promise, update the content once resolved\n//  * it's an explicit intent, perform the desired operation\n//  * it's an Array, resolve all values if Promises and/or\n//    update the node with the resulting list of content\nconst setAnyContent = (node, childNodes) => {\n  const aura = new Aura(node, childNodes);\n  let oldValue;\n  const anyContent = value => {\n    switch (typeof value) {\n      case 'string':\n      case 'number':\n      case 'boolean':\n        let length = childNodes.length;\n        if (\n          length === 1 &&\n          childNodes[0].nodeType === TEXT_NODE\n        ) {\n          if (oldValue !== value) {\n            oldValue = value;\n            childNodes[0].textContent = value;\n          }\n        } else {\n          oldValue = value;\n          if (length) {\n            aura.splice(0, length, text(node, value));\n          } else {\n            node.parentNode.insertBefore(\n              (childNodes[0] = text(node, value)),\n              node\n            );\n          }\n        }\n        break;\n      case 'object':\n      case 'undefined':\n        if (value == null) {\n          oldValue = value;\n          anyContent('');\n          break;\n        }\n      default:\n        oldValue = value;\n        if (isArray(value)) {\n          if (value.length === 0) {\n            aura.splice(0);\n          } else {\n            switch (typeof value[0]) {\n              case 'string':\n              case 'number':\n              case 'boolean':\n                anyContent({html: value});\n                break;\n              case 'object':\n                if (isArray(value[0])) {\n                  value = value.concat.apply([], value);\n                }\n                if (isPromise_ish(value[0])) {\n                  Promise.all(value).then(anyContent);\n                  break;\n                }\n              default:\n                optimist(aura, value);\n                break;\n            }\n          }\n        } else if (value instanceof Component) {\n          optimist(aura, [value]);\n        } else if (isNode_ish(value)) {\n          optimist(\n            aura,\n            value.nodeType === DOCUMENT_FRAGMENT_NODE ?\n              slice.call(value.childNodes) :\n              [value]\n          );\n        } else if (isPromise_ish(value)) {\n          value.then(anyContent);\n        } else if ('placeholder' in value) {\n          invokeAtDistance(value, anyContent);\n        } else if ('text' in value) {\n          anyContent(String(value.text));\n        } else if ('any' in value) {\n          anyContent(value.any);\n        } else if ('html' in value) {\n          aura.splice(0);\n          const fragment = createFragment(node, [].concat(value.html).join(''));\n          childNodes.push.apply(childNodes, fragment.childNodes);\n          node.parentNode.insertBefore(fragment, node);\n        } else if ('length' in value) {\n          anyContent(slice.call(value));\n        } else {\n          anyContent(Transformer.invoke(value, anyContent));\n        }\n        break;\n    }\n  };\n  return anyContent;\n};\n\n// there are four kind of attributes, and related behavior:\n//  * events, with a name starting with `on`, to add/remove event listeners\n//  * special, with a name present in their inherited prototype, accessed directly\n//  * regular, accessed through get/setAttribute standard DOM methods\n//  * style, the only regular attribute that also accepts an object as value\n//    so that you can style=${{width: 120}}. In this case, the behavior has been\n//    fully inspired by Preact library and its simplicity.\nconst setAttribute = (node, name, original) => {\n  const isSVG = OWNER_SVG_ELEMENT in node;\n  let oldValue;\n  // if the attribute is the style one\n  // handle it differently from others\n  if (name === 'style') {\n    return Style(node, original, isSVG);\n  }\n  // the name is an event one,\n  // add/remove event listeners accordingly\n  else if (/^on/.test(name)) {\n    let type = name.slice(2);\n    if (type === CONNECTED || type === DISCONNECTED) {\n      components.add(node);\n    }\n    else if (name.toLowerCase() in node) {\n      type = type.toLowerCase();\n    }\n    return newValue => {\n      if (oldValue !== newValue) {\n        if (oldValue) node.removeEventListener(type, oldValue, false);\n        oldValue = newValue;\n        if (newValue) node.addEventListener(type, newValue, false);\n      }\n    };\n  }\n  // the attribute is special ('value' in input)\n  // and it's not SVG *or* the name is exactly data,\n  // in this case assign the value directly\n  else if (name === 'data' || (!isSVG && name in node)) {\n    return newValue => {\n      if (oldValue !== newValue) {\n        oldValue = newValue;\n        if (node[name] !== newValue) {\n          node[name] = newValue;\n          if (newValue == null) {\n            node.removeAttribute(name);\n          }\n        }\n      }\n    };\n  }\n  // in every other case, use the attribute node as it is\n  // update only the value, set it as node only when/if needed\n  else {\n    let owner = false;\n    const attribute = original.cloneNode(true);\n    return newValue => {\n      if (oldValue !== newValue) {\n        oldValue = newValue;\n        if (attribute.value !== newValue) {\n          if (newValue == null) {\n            if (owner) {\n              owner = false;\n              node.removeAttributeNode(attribute);\n            }\n          } else {\n            attribute.value = newValue;\n            if (!owner) {\n              owner = true;\n              node.setAttributeNode(attribute);\n            }\n          }\n        }\n      }\n    };\n  }\n};\n\n// style or textareas don't accept HTML as content\n// it's pointless to transform or analyze anything\n// different from text there but it's worth checking\n// for possible defined intents.\nconst setTextContent = node => {\n  let oldValue;\n  const textContent = value => {\n    if (oldValue !== value) {\n      oldValue = value;\n      if (typeof value === 'object' && value) {\n        if (isPromise_ish(value)) {\n          value.then(textContent);\n        } else if ('placeholder' in value) {\n          invokeAtDistance(value, textContent);\n        } else if ('text' in value) {\n          textContent(String(value.text));\n        } else if ('any' in value) {\n          textContent(value.any);\n        } else if ('html' in value) {\n          textContent([].concat(value.html).join(''));\n        } else if ('length' in value) {\n          textContent(slice.call(value).join(''));\n        } else {\n          textContent(Transformer.invoke(value, textContent));\n        }\n      } else {\n        node.textContent = value == null ? '' : value;\n      }\n    }\n  };\n  return textContent;\n};\n\n// hyper.Components might need connected/disconnected notifications\n// The MutationObserver is the best way to implement that\n// but there is a fallback to deprecated DOMNodeInserted/Removed\n// so that even older browsers/engines can help components life-cycle\ntry {\n  (new MutationObserver(records => {\n    const length = records.length;\n    for (let i = 0; i < length; i++) {\n      let record = records[i];\n      dispatchAll(record.removedNodes, DISCONNECTED);\n      dispatchAll(record.addedNodes, CONNECTED);\n    }\n  })).observe(document, {subtree: true, childList: true});\n} catch(o_O) {\n  document.addEventListener('DOMNodeRemoved', event => {\n    dispatchAll([event.target], DISCONNECTED);\n  }, false);\n  document.addEventListener('DOMNodeInserted', event => {\n    dispatchAll([event.target], CONNECTED);\n  }, false);\n}\n\nObject.defineProperty(exports, '__esModule', {value: true}).default = {create, find};\n","'use strict';\nconst {Map, WeakMap} = require('../shared/poorlyfills.js');\nconst {UIDC} = require('../shared/constants.js');\nconst Updates = (m => m.__esModule ? m.default : m)(require('../objects/Updates.js'));\nconst {\n  createFragment,\n  importNode,\n  unique\n} = require('../shared/utils.js');\n\n// a weak collection of contexts that\n// are already known to hyperHTML\nconst bewitched = new WeakMap;\n\n// the collection of all template literals\n// since these are unique and immutable\n// for the whole application life-cycle\nconst templates = new Map;\n\n// better known as hyper.bind(node), the render is\n// the main tag function in charge of fully upgrading\n// or simply updating, contexts used as hyperHTML targets.\n// The `this` context is either a regular DOM node or a fragment.\nfunction render(template) {\n  const wicked = bewitched.get(this);\n  if (wicked && wicked.template === unique(template)) {\n    update.apply(wicked.updates, arguments);\n  } else {\n    upgrade.apply(this, arguments);\n  }\n  return this;\n}\n\n// an upgrade is in charge of collecting template info,\n// parse it once, if unknown, to map all interpolations\n// as single DOM callbacks, relate such template\n// to the current context, and render it after cleaning the context up\nfunction upgrade(template) {\n  template = unique(template);\n  const info =  templates.get(template) ||\n                createTemplate.call(this, template);\n  const fragment = importNode(this.ownerDocument, info.fragment);\n  const updates = Updates.create(fragment, info.paths);\n  bewitched.set(this, {template, updates});\n  update.apply(updates, arguments);\n  this.textContent = '';\n  this.appendChild(fragment);\n}\n\n// an update simply loops over all mapped DOM operations\nfunction update() {\n  const length = arguments.length;\n  for (let i = 1; i < length; i++) {\n    this[i - 1](arguments[i]);\n  }\n}\n\n// a template can be used to create a document fragment\n// aware of all interpolations and with a list\n// of paths used to find once those nodes that need updates,\n// no matter if these are attributes, text nodes, or regular one\nfunction createTemplate(template) {\n  const paths = [];\n  const fragment = createFragment(this, template.join(UIDC));\n  Updates.find(fragment, paths, template.slice());\n  const info = {fragment, paths};\n  templates.set(template, info);\n  return info;\n}\n\nObject.defineProperty(exports, '__esModule', {value: true}).default = render;\n","'use strict';\nconst {ELEMENT_NODE, SVG_NAMESPACE} = require('../shared/constants.js');\nconst {WeakMap, trim} = require('../shared/poorlyfills.js');\nconst {fragment} = require('../shared/easy-dom.js');\nconst {append, slice, unique} = require('../shared/utils.js');\nconst render = (m => m.__esModule ? m.default : m)(require('./render.js'));\n\n// all wires used per each context\nconst wires = new WeakMap;\n\n// A wire is a callback used as tag function\n// to lazily relate a generic object to a template literal.\n// hyper.wire(user)`<div id=user>${user.name}</div>`; => the div#user\n// This provides the ability to have a unique DOM structure\n// related to a unique JS object through a reusable template literal.\n// A wire can specify a type, as svg or html, and also an id\n// via html:id or :id convention. Such :id allows same JS objects\n// to be associated to different DOM structures accordingly with\n// the used template literal without losing previously rendered parts.\nconst wire = (obj, type) => obj == null ?\n  content(type || 'html') :\n  weakly(obj, type || 'html');\n\n// A wire content is a virtual reference to one or more nodes.\n// It's represented by either a DOM node, or an Array.\n// In both cases, the wire content role is to simply update\n// all nodes through the list of related callbacks.\n// In few words, a wire content is like an invisible parent node\n// in charge of updating its content like a bound element would do.\nconst content = type => {\n  let wire, container, content, template, updates;\n  return function (statics) {\n    statics = unique(statics);\n    let setup = template !== statics;\n    if (setup) {\n      template = statics;\n      content = fragment(document);\n      container = type === 'svg' ?\n        document.createElementNS(SVG_NAMESPACE, 'svg') :\n        content;\n      updates = render.bind(container);\n    }\n    updates.apply(null, arguments);\n    if (setup) {\n      if (type === 'svg') {\n        append(content, slice.call(container.childNodes));\n      }\n      wire = wireContent(content);\n    }\n    return wire;\n  };\n};\n\n// wires are weakly created through objects.\n// Each object can have multiple wires associated\n// and this is thanks to the type + :id feature.\nconst weakly = (obj, type) => {\n  const i = type.indexOf(':');\n  let wire = wires.get(obj);\n  let id = type;\n  if (-1 < i) {\n    id = type.slice(i + 1);\n    type = type.slice(0, i) || 'html';\n  }\n  if (!wire) wires.set(obj, wire = {});\n  return wire[id] || (wire[id] = content(type));\n};\n\n// a document fragment loses its nodes as soon\n// as it's appended into another node.\n// This would easily lose wired content\n// so that on a second render call, the parent\n// node wouldn't know which node was there\n// associated to the interpolation.\n// To prevent hyperHTML to forget about wired nodes,\n// these are either returned as Array or, if there's ony one entry,\n// as single referenced node that won't disappear from the fragment.\n// The initial fragment, at this point, would be used as unique reference.\nconst wireContent = node => {\n  const childNodes = node.childNodes;\n  const length = childNodes.length;\n  const wire = [];\n  for (let i = 0; i < length; i++) {\n    let child = childNodes[i];\n    if (\n      child.nodeType === ELEMENT_NODE ||\n      trim.call(child.textContent).length !== 0\n    ) {\n      wire.push(child);\n    }\n  }\n  return wire.length === 1 ? wire[0] : wire;\n};\n\nexports.content = content;\nexports.weakly = weakly;\nObject.defineProperty(exports, '__esModule', {value: true}).default = wire;\n","'use strict';\nconst Aura = (m => m.__esModule ? m.default : m)(require('./classes/Aura.js'));\nconst Component = (m => m.__esModule ? m.default : m)(require('./classes/Component.js'));\nconst {setup} = require('./classes/Component.js');\nconst Transformer = (m => m.__esModule ? m.default : m)(require('./objects/Transformer.js'));\nconst wire = (m => m.__esModule ? m.default : m)(require('./hyper/wire.js'));\nconst {content, weakly} = require('./hyper/wire.js');\nconst render = (m => m.__esModule ? m.default : m)(require('./hyper/render.js'));\n\n// all functions are self bound to the right context\n// you can do the following\n// const {bind, wire} = hyperHTML;\n// and use them right away: bind(node)`hello!`;\nconst bind = context => render.bind(context);\nconst define = Transformer.define;\n\nhyper.bind = bind;\nhyper.define = define;\nhyper.hyper = hyper;\nhyper.wire = wire;\nhyper.Component = Component;\n\n// if needed, you can increase or decrease\n// the maximum amount of nodes per list\n// to compute via majinbuu algorithm\nObject.defineProperty(hyper, 'MAX_LIST_SIZE', {\n  get: function get() {\n    return Aura.MAX_LIST_SIZE;\n  },\n  set: function set(value) {\n    Aura.MAX_LIST_SIZE = value;\n  }\n});\n\n// the wire content is the lazy defined\n// html or svg property of each hyper.Component\nsetup(content);\n\n// everything is exported directly or through the\n// hyperHTML callback, when used as top level script\nexports.Component = Component;\nexports.bind = bind;\nexports.define = define;\nexports.hyper = hyper;\nexports.wire = wire;\n\n// by default, hyperHTML is a smart function\n// that \"magically\" understands what's the best\n// thing to do with passed arguments\nfunction hyper(HTML) {\n  return arguments.length < 2 ?\n    (HTML == null ?\n      content('html') :\n      (typeof HTML === 'string' ?\n        wire(null, HTML) :\n        ('raw' in HTML ?\n          content('html')(HTML) :\n          ('nodeType' in HTML ?\n            render.bind(HTML) :\n            weakly(HTML, 'html')\n          )\n        )\n      )) :\n    ('raw' in HTML ?\n      content('html') : wire\n    ).apply(null, arguments);\n}\nObject.defineProperty(exports, '__esModule', {value: true}).default = hyper\n","import { wire } from 'hyperhtml';\r\n\r\nexport default store => {\r\n  const style = {\r\n    width: '20vh',\r\n    margin: '0 0 -4vh',\r\n    fill: '#2ECC71',\r\n  };\r\n\r\n  const heartbeat = wire(store, ':hb')`\r\n    <div class=\"heartbeat\" data-anime=\"heart\">\r\n      <svg style=${style} class=\"heartbeat\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 48 60\" enable-background=\"new 0 0 48 48\" xml:space=\"preserve\"><g><path d=\"M30.771,26.521l-2.178-9.265l-4.01,17.822c-0.102,0.453-0.502,0.777-0.969,0.781c-0.002,0-0.004,0-0.006,0   c-0.463,0-0.865-0.318-0.973-0.768l-4.59-19.116l-3.297,11.53c-0.123,0.43-0.516,0.725-0.961,0.725H6.1   c1.924,2.166,4.184,4.439,6.629,6.895c3.172,3.182,6.768,6.791,10.119,10.721l0.762,0.893l0.76-0.893   c2.846-3.338,6.076-6.576,9.201-9.709c3.105-3.115,6.025-6.049,8.365-8.844H31.746C31.281,27.293,30.879,26.973,30.771,26.521z\"/><path d=\"M17.168,11.769c0.125-0.437,0.496-0.754,0.984-0.725c0.453,0.01,0.844,0.325,0.951,0.767l4.475,18.633l4.02-17.868   c0.102-0.454,0.504-0.778,0.971-0.78c0.002,0,0.002,0,0.004,0c0.465,0,0.867,0.319,0.975,0.771l2.99,12.727h10.98   c2.27-3.049,3.699-5.937,3.699-8.718c0-8.443-5.926-15.313-13.209-15.313c-4.125,0-7.91,2.174-10.4,5.895   c-2.49-3.721-6.277-5.895-10.404-5.895C5.924,1.262,0,8.131,0,16.575c0,3.169,1.699,6.299,4.4,9.656h8.635L17.168,11.769z\"/><path d=\"M1,26.23c-0.553,0-1,0.447-1,1s0.447,1,1,1h5.1c-0.602-0.676-1.17-1.344-1.699-2H1z\"/><path d=\"M47,25.293h-3.482c-0.49,0.658-1.016,1.324-1.582,2H47c0.553,0,1-0.449,1-1C48,25.74,47.553,25.293,47,25.293z\"/></g></svg>\r\n    </div>\r\n  `;\r\n\r\n  return heartbeat;\r\n};\r\n"],"names":["App","html","store","handleEvent","target","setStore","name","value","render","bmi","wire","toFixed","DisplayBMI","Heartbeat","e","preventDefault","height","weight","num","Math","pow","TypedArray","global","Int32Array","Array","majinbuu","from","to","MAX_SIZE","fromLength","length","toLength","TOO_MANY","Infinity","sqrt","splice","apply","concat","performOperations","getOperations","levenstein","aura","splicer","list","$splice","result","arguments","grid","del","ins","sub","x","y","X","Y","crow","prow","addOperation","type","count","items","unshift","YL","XL","cell","top","left","diagonal","operations","curr","prev","op","diff","i","Object","defineProperty","exports","default","Component","content","defineProperties","prototype","[object Object]","ct","currentTarget","this","getAttribute","lazyGetter","svg","state","defaultState","get","setState","source","call","key","fn","secret","configurable","node","doc","createElement","ownerDocument","createDocumentFragment","text","createTextNode","UID","random","Date","require$$0","Event","o_O","document","createEvent","initEvent","Map","keys","values","obj","indexOf","push","WeakMap","WeakSet","wm","set","has","isArray","toString","arr","trim","replace","Aura","childNodes","m","__esModule","require$$1","fragment","require$$2","require$$3","MAX_LIST_SIZE","start","end","ph","cn","pn","parentNode","reLength","tmp","removeChild","arLength","insertBefore","appendChild","map","asNode","transformers","transformersKeys","hasOwnProperty","define","transformer","callback","invoke","object","create","testFragment","cloneNode","OWNER_SVG_ELEMENT","SVG_NAMESPACE","UIDC","hasAppend","hasContent","hasDoomedCloneNode","hasImportNode","append","attrName","no","RegExp","findAttributes","replaceAttributes","$0","$1","$2","SVGFragment","HTMLFragment","$3","clone","importNode","slice","template","TL","propertyIsEnumerable","test","navigator","userAgent","parseFloat","templateObjects","join","container","innerHTML","selector","querySelectorAll","createElementNS","firstChild","COMMENT_NODE","DOCUMENT_FRAGMENT_NODE","ELEMENT_NODE","prepend","path","parent","nodeType","ownerElement","createPath","find","IS_NON_DIMENSIONAL","original","isSVG","style","setAttributeNode","update","oldType","oldValue","newValue","cssText","info","toStyle","hyphen","ized","toLowerCase","css","Cache","CONNECTED","DISCONNECTED","TEXT_NODE","SHOULD_USE_TEXT_CONTENT","Path","require$$4","Style","require$$5","Transformer","require$$6","require$$7","require$$8","createFragment","require$$9","Promise","components","dispatchAll","nodes","event","dispatchTarget","dispatchEvent","children","paths","parts","child","textContent","shift","nodeName","cache","attributes","array","remove","attribute","realName","removeAttributeNode","invokeAtDistance","placeholder","resolve","then","String","any","isPromise_ish","optimist","setAnyContent","anyContent","all","isNode_ish","setAttribute","add","removeEventListener","addEventListener","removeAttribute","owner","setTextContent","MutationObserver","records","record","removedNodes","addedNodes","observe","subtree","childList","root","updates","wicked","bewitched","unique","templates","Updates","wires","statics","setup","bind","wireContent","weakly","id","hyper","HTML","context","body","Number","number"],"mappings":"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"}